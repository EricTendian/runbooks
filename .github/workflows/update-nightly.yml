on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      dists-json:
        required: true
        type: string

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - name: clone target
      uses: actions/checkout@v3
      with:
        path: target
        fetch-depth: 0
        token: ${{ secrets.GH_TOKEN }}
    - name: clone runbooks
      uses: actions/checkout@v3
      with:
        path: runbooks
        repository: deadsnakes/runbooks
    - name: pull upstream cpython
      run: runbooks/nightly-pull-upstream target ${{ inputs.version }}
  build:
    needs: update
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: ${{ fromJSON(inputs.dists-json) }}
    steps:
    - name: configure git
      run: |
        git config --global user.name 'Anthony Sottile (deadsnakes)'
        git config --global user.email 'asottile+deadsnakes@umich.edu'
        echo 'DEBFULLNAME=Anthony Sottile (deadsnakes)' >> $GITHUB_ENV
        echo 'DEBEMAIL=asottile+deadsnakes@umich.edu' >> $GITHUB_ENV
    - name: clone target
      uses: actions/checkout@v3
      with:
        path: target
        fetch-depth: 0
        token: ${{ secrets.GH_TOKEN }}
    - name: clone runbooks
      uses: actions/checkout@v3
      with:
        path: runbooks
        repository: deadsnakes/runbooks
    - name: import gpg key
      run: |
        install --directory ~/.gnupg --mode 700
        base64 -d <<< '${{ secrets.GPG_PUBLIC }}' > ~/.gnupg/pubring.gpg
        base64 -d <<< '${{ secrets.GPG_SECRET }}' > ~/.gnupg/secring.gpg
        chmod 600 ~/.gnupg/*
    - name: update branch
      id: update
      run: |
        set -euxo pipefail
        ret=0; runbooks/nightly-update-branch target ubuntu/${{ matrix.name }} || ret=$?
        if [ "$ret" -eq 42 ]; then
          echo "deploy=false" >> "$GITHUB_OUTPUT"
        elif [ "$ret" -ne 0 ]; then
          exit 1
        else
          echo "deploy=true" >> "$GITHUB_OUTPUT"
        fi
    - name: build
      run: mkdir dist && cd target && ../runbooks/build --git-build
      if: ${{ steps.update.outputs.deploy == 'true' }}
    - name: test
      run: runbooks/quick-test --distrib-codename ${{ matrix.name }} --dist-dir dist --src-dir target
      if: ${{ steps.update.outputs.deploy == 'true' }}
    - name: build source package
      run: rm -rf dist && cd target && ../runbooks/build --source --git-build
      if: ${{ steps.update.outputs.deploy == 'true' }}
    - name: upload package
      run: |
        runbooks/tools \
          --volume "$PWD/dist:/dist:ro" \
          bash -euxc \
          'cd /dist && USER=dput dput -U -u ppa:deadsnakes/nightly *.changes'
      if: ${{ steps.update.outputs.deploy == 'true' }}
    - name: push branches
      run: git -C target push origin ubuntu/${{ matrix.name }}
      if: ${{ steps.update.outputs.deploy == 'true' }}
