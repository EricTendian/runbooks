#!/usr/bin/env python3
from __future__ import annotations

import argparse
import os.path
import subprocess
import tempfile

TOOLS = os.path.join(os.path.abspath(os.path.dirname(__file__)), 'tools')


def _quiet(*cmd: str) -> None:
    subprocess.check_call(cmd, stdout=subprocess.DEVNULL)


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument('--branch-name', default='ubuntu/jammy')
    parser.add_argument('dsc')
    args = parser.parse_args()

    print('downloading src...')
    with tempfile.TemporaryDirectory() as td:
        cmd = ('dget', '--allow-unauthenticated', '--download-only', args.dsc)
        subprocess.check_call(cmd, cwd=td)
        dsc, = (f for f in os.listdir(td) if f.endswith('.dsc'))

        subprocess.check_call((
            TOOLS, '--volume', f'{td}:{td}:ro',
            'gbp', 'import-dsc', os.path.join(td, dsc),
            '--create-missing-branches',
            '--upstream-branch', 'upstream',
            '--pristine-tar', '--debian-branch', args.branch_name,
        ))

    _quiet('git', 'checkout', '-q', args.branch_name)
    _quiet(TOOLS, 'gbp', 'pq', 'import')
    _quiet('git', 'checkout', '-q', args.branch_name)
    _quiet('git', 'merge', '--no-edit', 'upstream')
    _quiet(TOOLS, 'gbp', 'pq', 'rebase')
    _quiet(TOOLS, 'gbp', 'pq', 'export')
    if subprocess.call(('git', 'diff', '--quiet')):
        _quiet('git', 'add', 'debian/patches')
        _quiet('git', 'commit', '-m', 'Refresh patches.')
    return 0


if __name__ == '__main__':
    raise SystemExit(main())
