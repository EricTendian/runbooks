#!/usr/bin/env python3
import argparse
import os.path
from typing import NoReturn

PROG = '''\
inst() {{
    dpkg -i "/dist/$1"_* || true
    apt-get install -yf
    dpkg -l | grep "$1"
}}

apt-get update
inst libpython{ver}-minimal
inst libpython{ver}-stdlib
inst libpython{ver}
inst python{ver}-minimal
inst python{ver}

python{ver} -c 'import cmath, ssl'
# distutils.__init__ and distutils.version should be in main lib package
python{ver} -c 'import distutils; assert distutils.__file__'
python{ver} -c 'import distutils.version'
'''


def main() -> NoReturn:
    parser = argparse.ArgumentParser()
    parser.add_argument('--distrib-codename', default='bionic')
    parser.add_argument('--dist-dir', default='../dist')
    parser.add_argument('--src-dir', default='.')
    args = parser.parse_args()

    with open(os.path.join(args.src_dir, 'debian/rules')) as f:
        for line in f:
            if line.startswith('VER='):
                _, version = line.strip().split('=')
                break
        else:
            raise AssertionError('could not find version!')

    cmd = (
        'docker', 'run', '--rm',
        '-v', f'{os.path.abspath(args.dist_dir)}:/dist:ro',
        f'ubuntu:{args.distrib_codename}',
        'bash', '-euxc', PROG.format(ver=version),
    )
    os.execvp(cmd[0], cmd)


if __name__ == '__main__':
    exit(main())
